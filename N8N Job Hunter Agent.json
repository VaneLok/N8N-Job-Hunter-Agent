{
  "name": "N8N Job Hunter Agent",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            { "triggerAtHour": 7 }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [-2672, 96],
      "id": "3a264b02-8079-4e08-afc6-b30b382f875a",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            { "triggerAtHour": 15 }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [-2672, 288],
      "id": "1ca849d5-83b5-4307-b210-ae34111deab5",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [-2448, 176],
      "id": "22d13cc2-aec5-4b03-97f2-a7e76baa9d61",
      "name": "Merge"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"applicant\": {\n    \"full_name\": \"{{$env.APPLICANT_FULL_NAME}}\",\n    \"email\": \"{{$env.APPLICANT_EMAIL}}\",\n    \"phone\": \"{{$env.APPLICANT_PHONE}}\",\n    \"resume_text\": \"{{$env.APPLICANT_RESUME_TEXT}}\",\n    \"skills\": [\n      \"Security Operations & Monitoring\",\n      \"Incident Response & Escalation\",\n      \"Risk & Vulnerability Management\",\n      \"Threat Intelligence & Analysis\",\n      \"IT Infrastructure Administration\",\n      \"DDW research\",\n      \"MITRE ATT&CK\",\n      \"CVSS v4.0\",\n      \"Access & Identity Management\",\n      \"Data Protection & Compliance\",\n      \"Project Management\",\n      \"Technical Documentation & Reporting\",\n      \"Process Improvement\",\n      \"Windows\",\n      \"macOS\",\n      \"Linux\",\n      \"CrowdStrike Falcon Recon\",\n      \"Office 365 Administration\",\n      \"Google Workspace Administration\",\n      \"Active Directory\",\n      \"Jira\",\n      \"ServiceNow\",\n      \"Three.js\",\n      \"n8n\",\n      \"Vulnerability Assessment\",\n      \"Risk Identification\",\n      \"Security Controls\",\n      \"Access Management\",\n      \"VPNs\",\n      \"Firewalls\",\n      \"Network Troubleshooting\",\n      \"Bilingual: English & Spanish\"\n    ]\n  },\n  \"drive\": {\n    \"resume_template_id\": \"{{$env.GDRIVE_RESUME_TEMPLATE_ID}}\",\n    \"cover_template_id\": \"{{$env.GDRIVE_COVER_TEMPLATE_ID}}\",\n    \"target_folder_id\": \"{{$env.GDRIVE_TARGET_FOLDER_ID}}\"\n  },\n  \"sheet\": {\n    \"spreadsheet_id\": \"{{$env.SHEET_ID}}\",\n    \"range\": \"{{$env.SHEET_RANGE || 'AppliedMemory!A1:Z1'}}\"\n  },\n  \"search\": {\n    \"keywords\": [\n      \"SOC Analyst\",\"Security Operations Specialist\",\"Security Operations Coordinator\",\n      \"Incident Response Coordinator\",\"Security Incident Handler\",\"Threat Hunter\",\n      \"Threat Intelligence Analyst\",\"Cyber Threat Intelligence Analyst\",\"IAM Coordinator\",\n      \"Identity Governance Analyst\",\"Access Control Coordinator\",\"Authentication & Authorization Specialist\",\n      \"Privileged Access Management Analyst\",\"Zero Trust Security Coordinator\",\"Vulnerability Analyst\",\n      \"Vulnerability Management Coordinator\",\"Risk & Controls Analyst\",\"Security Risk Coordinator\",\n      \"GRC Coordinator\",\"Security Compliance Coordinator\",\"IT Audit Coordinator\",\"Security Policy Coordinator\",\n      \"Security Governance Associate\",\"Digital Forensics Coordinator\",\"Malware Analyst\",\"Information Assurance Analyst\",\n      \"Application Security Coordinator\",\"Cloud Security Coordinator\",\"Infrastructure Security Coordinator\",\n      \"DevSecOps Coordinator\",\"Security Architecture Associate\",\"Penetration Testing Coordinator\",\"Red Team Coordinator\",\n      \"Security Consultant Associate\",\"Security Awareness & Training Coordinator\",\"Product Designer in Cyber Tools\",\n      \"Security UX/UI Designer\",\"Cybersecurity Design Systems Specialist\",\"AR/VR Security Experience Designer\",\n      \"Data Privacy Interface Coordinator\",\"Creative Automation Coordinator\",\"Creative Technologist\",\n      \"Automation Experience Designer\",\"Interactive Media Coordinator\",\"AR/VR Design Coordinator\",\n      \"UI/UX Technologist\",\"Portfolio / Brand Experience Designer\",\"AI Job Matching Coordinator\",\n      \"Security Automation Coordinator\",\"AI Workflow Orchestrator\",\"Generative AI Security Designer\",\n      \"AI/LLM Product Coordinator\",\"AI Compliance & Risk Coordinator\",\"Fintech Product Coordinator\",\n      \"Digital Banking Security Analyst\",\"LLM Budgeting Platform Designer\",\"Security & Compliance Officer\",\n      \"Financial Data Privacy Coordinator\",\"Information Security Analyst\",\"Cybersecurity Specialist\",\n      \"Security Engineer Associate\",\"UX/UI Designer\"\n    ],\n    \"location\": \"{{$env.SEARCH_LOCATION || 'Ontario, Canada'}}\",\n    \"ontario_only\": {{ $env.SEARCH_ONTARIO_ONLY || true }},\n    \"include_remote_canada\": {{ $env.SEARCH_INCLUDE_REMOTE_CA || true }},\n    \"recency_days\": {{ $env.SEARCH_RECENCY_DAYS || 20 }}\n  },\n  \"rate_limit\": {\n    \"batch_size\": {{ $env.RATE_LIMIT_BATCH_SIZE || 6 }},\n    \"min_wait_sec\": {{ $env.RATE_LIMIT_MIN_WAIT_SEC || 30 }},\n    \"max_wait_sec\": {{ $env.RATE_LIMIT_MAX_WAIT_SEC || 90 }}\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-2240, 176],
      "id": "c6492d3a-1242-485f-a78a-a7eb9886e862",
      "name": "Config"
    },
    {
      "parameters": {
        "jsCode": "const cfg = $item(0).$node[\"Config\"].json;\n\nconst kw = Array.isArray(cfg.search?.keywords) ? cfg.search.keywords : [];\nconst chunkSize = 10;\nconst queries = [];\nfor (let i = 0; i < kw.length; i += chunkSize) {\n  queries.push(kw.slice(i, i + chunkSize).join(' OR '));\n}\nconst loc = cfg.search?.location || 'Ontario, Canada';\n\nif (queries.length === 0) {\n  return [{ json: { q: 'cybersecurity analyst', location: loc } }];\n}\nreturn queries.map(q => ({ json: { q, location: loc } }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-2048, 176],
      "id": "0abed2bf-acde-421d-b8cd-4c23320c3c3e",
      "name": "Build Searches",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "https://serpapi.com/search.json",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            { "name": "engine", "value": "=google" },
            { "name": "q", "value": "={{$json.q}} site:linkedin.com/jobs" },
            { "name": "location", "value": "={{$json.location}}" },
            { "name": "hl", "value": "=en" }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [-1856, 256],
      "id": "6eb686dd-2889-4996-9050-7e3e5198d32f",
      "name": "LinkedIn Jobs",
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://serpapi.com/search.json",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            { "name": "engine", "value": "=google_jobs" },
            { "name": "q", "value": "={{$json.q}}" },
            { "name": "location", "value": "={{$json.location}}" },
            { "name": "hl", "value": "=en" }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [-1856, 64],
      "id": "1eb292b0-d4b7-4343-805a-9f440a2040c6",
      "name": "Google Jobs",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Minimal normalizer for mocked items\nconst items = $input.all();\nreturn items.map(it => {\n  const j = it.json;\n  return {\n    json: {\n      source: j.source || 'mock',\n      title: j.title || '',\n      company: j.company || '',\n      location: j.location || '',\n      url: j.url || j.link || '',\n      posted_at: j.posted_at ?? null,\n      description: j.description || ''\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-1312, 176],
      "id": "c2fd25e5-bcff-49f2-9cd0-404803a4030d",
      "name": "Normalize + Freshness"
    },
    {
      "parameters": {
        "jsCode": "// Emit 3 jobs so we can test downstream without SerpApi\nreturn [\n  { json: { source: 'google_jobs', title: 'SOC Analyst', company: 'Acme Corp', location: 'Toronto, Ontario, Canada', url: 'https://jobs.example.com/acme-soc', posted_at: '2025-08-21', description: 'Monitor SIEM, triage alerts, coordinate IR playbooks.' }},\n  { json: { source: 'google_jobs', title: 'Threat Intelligence Analyst', company: 'BlueShield', location: 'Ottawa, Ontario, Canada', url: 'https://jobs.example.com/blueshield-ti', posted_at: '2025-08-22', description: 'Collection/analysis, dark web monitoring, CTI reporting.' }},\n  { json: { source: 'google_jobs', title: 'Security Operations Coordinator', company: 'Nimbus', location: 'Remote, Canada', url: 'https://jobs.example.com/nimbus-soc', posted_at: '2025-08-23', description: 'Coordinate SOC tasks and incident comms across Canada.' }}\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-1520, 64],
      "id": "9d5e800f-b92a-4117-8051-3a02606c502e",
      "name": "Temporarily bypass"
    },
    {
      "parameters": {
        "jsCode": "// Pretend we've already applied to one job\nreturn [\n  { json: { apply_key: '2025-08-20-001', title: 'SOC Analyst', company: 'Acme Corp', location: 'Toronto, ON', link: 'https://jobs.example.com/acme-soc', source_domain: 'google.com' }}\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-928, 288],
      "id": "88dd9d18-9b2b-4266-8d97-25177253c09d",
      "name": "Mock Tracker Rows"
    },
    {
      "parameters": {
        "documentId": { "__rl": true, "value": "={{$item(0).$node[\"Config\"].json.sheet.spreadsheet_id}}", "mode": "id" },
        "sheetName": { "__rl": true, "value": "AppliedMemory", "mode": "name" },
        "options": {
          "dataLocationOnSheet": { "values": { "rangeDefinition": "detectAutomatically" } },
          "outputFormatting": { "values": { "general": "UNFORMATTED_VALUE", "date": "FORMATTED_STRING" } }
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [-960, 448],
      "id": "dda6963f-446c-4a59-8c65-c3796a6b90a5",
      "name": "Tracker Rows (Sheet)"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": { "__rl": true, "value": "={{$node[\"Config\"].json.sheet.spreadsheet_id}}", "mode": "id" },
        "sheetName": { "__rl": true, "value": 589591170, "mode": "list", "cachedResultName": "AppliedMemory", "cachedResultUrl": "" },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            { "id": "apply_key", "displayName": "apply_key", "required": false, "defaultMatch": false, "display": true, "type": "string", "canBeUsedToMatch": true },
            { "id": "title", "displayName": "title", "required": false, "defaultMatch": false, "display": true, "type": "string", "canBeUsedToMatch": true },
            { "id": "company", "displayName": "company", "required": false, "defaultMatch": false, "display": true, "type": "string", "canBeUsedToMatch": true },
            { "id": "location", "displayName": "location", "required": false, "defaultMatch": false, "display": true, "type": "string", "canBeUsedToMatch": true },
            { "id": "link", "displayName": "link", "required": false, "defaultMatch": false, "display": true, "type": "string", "canBeUsedToMatch": true },
            { "id": "source", "displayName": "source", "required": false, "defaultMatch": false, "display": true, "type": "string", "canBeUsedToMatch": true },
            { "id": "posted_at", "displayName": "posted_at", "required": false, "defaultMatch": false, "display": true, "type": "string", "canBeUsedToMatch": true },
            { "id": "captured_at", "displayName": "captured_at", "required": false, "defaultMatch": false, "display": true, "type": "string", "canBeUsedToMatch": true },
            { "id": "source2", "displayName": "source", "required": false, "defaultMatch": false, "display": true, "type": "string", "canBeUsedToMatch": true },
            { "id": "status", "displayName": "status", "required": false, "defaultMatch": false, "display": true, "type": "string", "canBeUsedToMatch": true },
            { "id": "ai_match_score", "displayName": "ai_match_score", "required": false, "defaultMatch": false, "display": true, "type": "string", "canBeUsedToMatch": true },
            { "id": "ai_decision", "displayName": "ai_decision", "required": false, "defaultMatch": false, "display": true, "type": "string", "canBeUsedToMatch": true },
            { "id": "ai_reasons", "displayName": "ai_reasons", "required": false, "defaultMatch": false, "display": true, "type": "string", "canBeUsedToMatch": true },
            { "id": "ai_must_have_misses", "displayName": "ai_must_have_misses", "required": false, "defaultMatch": false, "display": true, "type": "string", "canBeUsedToMatch": true },
            { "id": "ai_resume_keywords", "displayName": "ai_resume_keywords", "required": false, "defaultMatch": false, "display": true, "type": "string", "canBeUsedToMatch": true }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": { "cellFormat": "USER_ENTERED", "handlingExtraData": "ignoreIt", "useAppend": true }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [720, 112],
      "id": "56cb2ae1-c984-45dd-a533-9235d24c2fce",
      "name": "Write to Tracker (Append)"
    },
    {
      "parameters": {
        "model": { "__rl": true, "mode": "list", "value": "gpt-4.1-mini" },
        "options": { "maxTokens": null, "responseFormat": "=json_object", "temperature": 0.2 }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [-560, 288],
      "id": "7c0301b2-4f03-421c-98d4-917db04db922",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an ATS-style evaluator. Score how well this resume fits the job.\nReturn ONLY valid JSON matching the schema with no extra text.\n\nSCHEMA:\n{\n  \"match_score\": number (0-100),\n  \"decision\": \"apply\" | \"skip\",\n  \"reasons\": string[],\n  \"must_have_misses\": string[],\n  \"resume_keywords\": string[]\n}\n\nJOB:\nTitle: {{$json.title || ''}}\nCompany: {{$json.company || ''}}\nLocation: {{$json.location || ''}}\nPosted: {{$json.posted_at || ''}}\nLink: {{$json.link || $json.url || ''}}\nDescription:\n{{$json.description || ''}}\n\nRESUME (plain text):\n{{ $node[\"Config\"].json.applicant.resume_text || '' }}\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are an ATS-style evaluator. Output ONLY a valid JSON object that conforms to this schema.\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"match_score\": {\"type\":\"number\",\"minimum\":0,\"maximum\":100},\n    \"decision\": {\"type\":\"string\",\"enum\":[\"apply\",\"skip\"]},\n    \"reasons\": {\"type\":\"array\",\"items\":{\"type\":\"string\"}},\n    \"must_have_misses\": {\"type\":\"array\",\"items\":{\"type\":\"string\"}},\n    \"resume_keywords\": {\"type\":\"array\",\"items\":{\"type\":\"string\"}}\n  },\n  \"required\": [\"match_score\",\"decision\"]\n}\nNo explanations, no markdown – JSON only."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [-496, 112],
      "id": "63a31cba-7be0-4829-8ba4-2271a8309aed",
      "name": "Oracle of Fit (Matchmaker AI)"
    },
    {
      "parameters": {
        "jsCode": "const canon = u => (u || '').toString().trim().toLowerCase().replace(/^https?:\\/\\/(www\\.)?/, '').replace(/\\/$/, '');\nconst jobs = $input.all();\nconst history = $input.all(1) || [];\nconst seen = new Set(history.map(h => canon(h.json.apply_key || h.json.link || h.json.url || '')));\nconst out = [];\nfor (const it of jobs) {\n  const u = canon(it.json.link || it.json.url || '');\n  if (u && !seen.has(u)) out.push(it);\n}\nreturn out;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-720, 176],
      "id": "38e7bedc-03ac-4aca-9dde-ac93cbb3a826",
      "name": "Mirrorbreak Pass (De-dupe by URL)"
    },
    {
      "parameters": { "mode": "combine", "combineBy": "combineByPosition", "options": {} },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [-112, 48],
      "id": "3c24c6da-6591-404e-8090-a2d3da27550f",
      "name": "Fusion Forge (Join Job + AI)"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [-1696, 176],
      "id": "c2a47811-53cd-4693-9aac-119813555e87",
      "name": "Fusion Forge"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\":\"object\",\n  \"properties\":{\n    \"match_score\":{\"type\":\"number\",\"minimum\":0,\"maximum\":100},\n    \"decision\":{\"type\":\"string\",\"enum\":[\"apply\",\"skip\"]},\n    \"reasons\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\n    \"must_have_misses\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\n    \"resume_keywords\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}\n  },\n  \"required\":[\"match_score\",\"decision\"]\n}",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [-352, 304],
      "id": "22e78c9f-0cae-4e15-9d38-d249c86d6da9",
      "name": "Rune Translator (Structured Output Parser)"
    },
    {
      "parameters": {
        "jsCode": "const INCLUDE_REMOTE_CA = true;\nfunction inOntario(hay) {\n  hay = hay.toLowerCase();\n  if (INCLUDE_REMOTE_CA && /\\b(canada|ca)\\b/.test(hay) && /remote/.test(hay)) return true;\n  return /ontario|toronto|ottawa|mississauga|brampton|waterloo|kitchener|london,?\\s*on|hamilton|oakville|markham|vaughan|burlington|windsor|guelph|kingston|niagara|oshawa/.test(hay);\n}\nconst out = [];\nfor (const it of $input.all()) {\n  const j = it.json;\n  const hay = `${j.location || ''} ${j.title || ''} ${j.description || ''}`;\n  if (inOntario(hay)) out.push(it);\n}\nreturn out;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-1104, 176],
      "id": "f38ac916-f69a-463f-a8ab-f5438d983333",
      "name": "Provincial Gate"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=JOB TEXT\n{{ $json.description || '' }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Return ONLY a JSON object at the ROOT that matches the schema below.\nDo NOT wrap it in keys like \"output\", \"result\", or \"data\". No markdown fences.\nIf a field is unknown, use the empty/default specified by the schema. Never return null.\n\nYou are “Job Snapshot AI”. Analyze ONLY the job text provided and return a compact snapshot.\n\nRULES\n- Base your output solely on the job text provided (no external knowledge).\n- Arrays must be short, focused, and non-redundant.\n- Use Ontario (Canada) market context for compensation suggestions when the level is not stated.\n- Compensation logic:\n  • If compensation is listed in the posting → compensation_listed = true, compensation_text = verbatim text, salary_recommendation_cad = 0.\n  • If compensation is NOT listed → compensation_listed = false, compensation_text = \"\", salary_recommendation_cad = an integer CAD estimate.\n- Types: compensation_listed must be boolean; salary_recommendation_cad must be a number (integer).\n- Strings should be trimmed; summary max ~220 chars.\n- Include ALL schema keys exactly once at the root.\n\nSCHEMA (return exactly these keys at root):\n{\n  \"summary\": \"1-2 sentences describing the work (not just the title). Max ~220 chars.\",\n  \"core_responsibilities\": [\"max 5 short bullets\"],\n  \"benefits\": [\"max 5 items if mentioned; else []\"],\n  \"compensation_listed\": true,\n  \"compensation_text\": \"verbatim if listed; else empty\",\n  \"salary_recommendation_cad\": 0,\n  \"novelty_highlights\": [\"max 3 notable elements (tech/process/impact); [] if nothing noteworthy\"],\n  \"green_flags\": [\"max 4 positives\"],\n  \"red_flags\": [\"max 4 risks\"]\n}\n\nINTERPRETATION NOTES\n- salary_recommendation_cad: integer CAD estimate ONLY if not listed; consider Ontario market and the responsibilities implied.\n- novelty_highlights: surface standout elements relevant to THIS role (tech/process/impact/product). Return [] only if nothing notable.\n- Keep outputs concise and concrete."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [272, 112],
      "id": "a29ba158-6ea7-42c4-ad05-67c74660014a",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": { "__rl": true, "mode": "list", "value": "gpt-4.1-mini" },
        "options": { "maxTokens": 300, "responseFormat": "=json_object", "temperature": 0.2, "maxRetries": 2 }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [208, 336],
      "id": "776fbd7c-4993-4401-80d0-955656be4bf8",
      "name": "OpenAI Chat Model1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            { "id": "63fcb4e9-997f-4f24-b53b-bdc8a05c555b", "name": "title", "value": "={{$json.title}}", "type": "string" },
            { "id": "0daeda43-83a5-490e-910f-02dd0a01061a", "name": "company", "value": "={{$json.company}}", "type": "string" },
            { "id": "49c93d81-38d5-410f-bc3d-8b4936354869", "name": "location", "value": "={{$json.location}}", "type": "string" },
            { "id": "95d87d64-31c4-495c-8498-5cc63244aa98", "name": "link", "value": "={{$json.url || $json.link}}", "type": "string" },
            { "id": "373d96d4-1f26-4184-9740-a67d3205be08", "name": "source_domain", "value": "={{($json.url || $json.link || '').replace(/^https?:\\/\\//,'').split('/')[0]}}", "type": "string" },
            { "id": "e70ef8ee-343e-4ebb-be58-a5079490564d", "name": "posted_at", "value": "={{$json.posted_at || $now.toFormat('yyyy-LL-dd')}}", "type": "string" },
            { "id": "e7146008-bc88-4cf4-b977-0fd73edd8deb", "name": "captured_at", "value": "={{$now.toFormat('yyyy-LL-dd HH:mm').trim()}}", "type": "string" },
            { "id": "cc934e0b-6eb0-43d8-995e-2a967714a308", "name": "source", "value": "={{$json.source || $json.source_domain || ''}}", "type": "string" },
            { "id": "6365e6e5-b33e-42af-b825-858dbee32832", "name": "status", "value": "=New", "type": "string" },
            { "id": "bbb11220-2e85-4253-a365-cb80c02c2625", "name": "apply_key", "value": "={{( $json.url || $json.link || '' ).toLowerCase().replace(/^https?:\\/\\//,'').replace(/\\/$/,'')}}", "type": "string" },
            { "id": "2f713744-b8ce-4171-abe8-066889156937", "name": "ai_match_score", "value": "={{ ($json.output?.match_score ?? $json.match_score ?? 0) + '%' }}", "type": "string" },
            { "id": "57c37c60-4e44-46bf-9984-a6de95886192", "name": "ai_decision", "value": "={{$json.output?.decision ?? $json.decision ?? ''}}", "type": "string" },
            { "id": "5f95a5b1-6d7d-409d-819f-825f7a865a50", "name": "ai_reasons", "value": "={{($json.output?.reasons ?? $json.reasons ?? []).join(' | ')}}", "type": "string" },
            { "id": "188e6072-27ef-44d4-84c1-c95df5d99125", "name": "ai_must_have_misses", "value": "={{($json.output?.must_have_misses ?? $json.must_have_misses ?? []).join(' | ')}}", "type": "string" },
            { "id": "a6831dc8-8d30-4f20-8d9c-e0c92220bb24", "name": "ai_resume_keywords", "value": "={{($json.output?.resume_keywords ?? $json.resume_keywords ?? []).join(' | ')}}", "type": "string" },
            {
              "id": "bc7da102-03f4-4937-afe8-e89641609dfe",
              "name": "snapshot_card",
              "value": "={{\n(() => {\n  const o = $json.job_snapshot ?? $json.output ?? $json;\n  const asArray = (v) => Array.isArray(v) ? v : (v == null || v === '' ? [] : [String(v)]);\n  const join = (v, n = 5, sep = ' • ') => asArray(v).map(s => String(s).trim()).filter(Boolean).slice(0, n).join(sep);\n  const clean = (s, max = 220) => { const t = String(s || '').replace(/\\s+/g, ' ').trim(); return t.length > max ? t.slice(0, max - 1) + '…' : t; };\n  const formatCAD = (n) => { const num = Number(n); return Number.isFinite(num) ? new Intl.NumberFormat('en-CA').format(num) : String(n); };\n  const listed = o.compensation_listed === true || o.compensation_listed === 'true';\n  const lines = [];\n  if (o.summary) lines.push('— SUMMARY —', clean(o.summary));\n  const core = join(o.core_responsibilities, 4); if (core) lines.push('— CORE —', core);\n  const benefits = join(o.benefits, 4); if (benefits) lines.push('— BENEFITS —', benefits);\n  if (listed) { lines.push('— COMP —', 'Listed: Yes'); const t = clean(o.compensation_text || '', 400); if (t) lines.push(`Text: ${t}`); }\n  else if (o.compensation_listed === false || o.compensation_listed === 'false') { lines.push('— COMP —', 'Listed: No'); const est = o.salary_recommendation_cad; if (est != null && String(est).trim()) lines.push(`Est: CAD ${formatCAD(est)}`); }\n  const novel = join(o.novelty_highlights, 3); if (novel) lines.push('— NOTABLE —', novel);\n  const green = join(o.green_flags, 4); if (green) lines.push('— GREEN —', green);\n  const red = join(o.red_flags, 4); if (red) lines.push('— RED —', red);\n  return lines.join('\\n');\n})()\n}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [560, 112],
      "id": "fdef6815-1806-4dac-a450-4499a1a0016d",
      "name": "Registry Desk (Prep Rows)"
    },
    {
      "parameters": {
        "conditions": {
          "options": { "caseSensitive": true, "leftValue": "", "typeValidation": "loose", "version": 2 },
          "conditions": [
            { "id": "d18fa5a6-5077-4917-bda4-f80f5a0a2479", "leftValue": "={{$json.output?.decision ?? $json.decision ?? $json.response?.output?.decision}}", "rightValue": "apply", "operator": { "type": "string", "operation": "equals", "name": "filter.operator.equals" } },
            { "id": "4ea255a6-8396-4bc5-b0d6-08391beca8fd", "leftValue": "={{$json.output?.match_score ?? $json.match_score ?? $json.response?.output?.match_score}}", "rightValue": 65, "operator": { "type": "number", "operation": "gte" } }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [64, 112],
      "id": "11f5aef5-338a-433f-a284-6504e0508e90",
      "name": "Verdict Vortex (IF)"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"summary\": { \"type\": \"string\" },\n    \"core_responsibilities\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n    \"benefits\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n    \"compensation_listed\": { \"type\": \"boolean\" },\n    \"compensation_text\": { \"type\": \"string\" },\n    \"salary_recommendation_cad\": { \"type\": \"number\" },\n    \"novelty_highlights\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n    \"green_flags\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n    \"red_flags\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } }\n  },\n  \"required\": []\n}\n",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [368, 304],
      "id": "16cb5bc3-d92d-4e12-bf4e-d2f761d54c0a",
      "name": "Structured Output Parser"
    }
  ],
  "pinData": {
    "Write to Tracker (Append)": [
      {
        "json": {
          "title": "SOC Analyst",
          "company": "Acme Corp",
          "location": "Toronto, ON",
          "link": "https://jobs.example.com/acme-soc",
          "source_domain": "jobs.example.com",
          "posted_at": "2025-09-02",
          "captured_at": "2025-09-02 23:20",
          "source": "google.com",
          "status": "New",
          "apply_key": "jobs.example.com/acme-soc",
          "ai_match_score": "65%",
          "ai_decision": "apply",
          "ai_reasons": "Candidate holds Security+ certification relevant to cybersecurity roles. | Experience includes security operations, incident response, and risk management skills. | Familiarity with threat intelligence and dark web investigations aligns with SOC analyst tasks. | Experience in managing sensitive data and compliance is beneficial for SOC environment. | Lacks direct SOC analyst job experience or explicit mention of SOC tools and monitoring platforms.",
          "ai_must_have_misses": "Direct SOC analyst experience | Experience with SIEM tools or specific SOC monitoring platforms",
          "ai_resume_keywords": "Security+ | incident response | risk management | threat intelligence | dark web investigations | security operations | compliance | access management | vulnerability assessment | MITRE ATT&CK"
        }
      }
    ],
    "Mirrorbreak Pass (De-dupe by URL)": [
      {
        "json": {
          "apply_key": "2025-08-20-001",
          "title": "SOC Analyst",
          "company": "Acme Corp",
          "location": "Toronto, ON",
          "link": "https://jobs.example.com/acme-soc",
          "source_domain": "google.com"
        }
      }
    ],
    "Registry Desk (Prep Rows)": [
      {
        "json": {
          "title": "SOC Analyst",
          "company": "Acme Corp",
          "location": "Toronto, ON",
          "link": "https://jobs.example.com/acme-soc",
          "source_domain": "jobs.example.com",
          "posted_at": "2025-09-02",
          "captured_at": "2025-09-02 23:20",
          "source": "google.com",
          "status": "New",
          "apply_key": "jobs.example.com/acme-soc",
          "ai_match_score": "65%",
          "ai_decision": "apply",
          "ai_reasons": "Candidate holds Security+ certification relevant to cybersecurity roles. | Experience includes security operations, incident response, and risk management skills. | Familiarity with threat intelligence and dark web investigations aligns with SOC analyst tasks. | Experience in managing sensitive data and compliance is beneficial for SOC environment. | Lacks direct SOC analyst job experience or explicit mention of SOC tools and monitoring platforms.",
          "ai_must_have_misses": "Direct SOC analyst experience | Experience with SIEM tools or specific SOC monitoring platforms",
          "ai_resume_keywords": "Security+ | incident response | risk management | threat intelligence | dark web investigations | security operations | compliance | access management | vulnerability assessment | MITRE ATT&CK"
        }
      }
    ]
  },
  "connections": {
    "Schedule Trigger": { "main": [[{ "node": "Merge", "type": "main", "index": 0 }]] },
    "Schedule Trigger1": { "main": [[{ "node": "Merge", "type": "main", "index": 1 }]] },
    "Merge": { "main": [[{ "node": "Config", "type": "main", "index": 0 }]] },
    "Config": { "main": [[{ "node": "Build Searches", "type": "main", "index": 0 }]] },
    "Build Searches": { "main": [[{ "node": "Google Jobs", "type": "main", "index": 0 }, { "node": "LinkedIn Jobs", "type": "main", "index": 0 }]] },
    "LinkedIn Jobs": { "main": [[{ "node": "Fusion Forge", "type": "main", "index": 1 }]] },
    "Google Jobs": { "main": [[{ "node": "Fusion Forge", "type": "main", "index": 0 }]] },
    "Normalize + Freshness": { "main": [[{ "node": "Provincial Gate", "type": "main", "index": 0 }]] },
    "Temporarily bypass": { "main": [[{ "node": "Normalize + Freshness", "type": "main", "index": 0 }]] },
    "Mock Tracker Rows": { "main": [[{ "node": "Mirrorbreak Pass (De-dupe by URL)", "type": "main", "index": 0 }]] },
    "OpenAI Chat Model": {
      "ai_languageModel": [[
        { "node": "Oracle of Fit (Matchmaker AI)", "type": "ai_languageModel", "index": 0 },
        { "node": "Rune Translator (Structured Output Parser)", "type": "ai_languageModel", "index": 0 }
      ]]
    },
    "Oracle of Fit (Matchmaker AI)": { "main": [[{ "node": "Fusion Forge (Join Job + AI)", "type": "main", "index": 1 }]] },
    "Mirrorbreak Pass (De-dupe by URL)": { "main": [[{ "node": "Oracle of Fit (Matchmaker AI)", "type": "main", "index": 0 }, { "node": "Fusion Forge (Join Job + AI)", "type": "main", "index": 0 }]] },
    "Fusion Forge (Join Job + AI)": { "main": [[{ "node": "Verdict Vortex (IF)", "type": "main", "index": 0 }]] },
    "Fusion Forge": { "main": [[{ "node": "Temporarily bypass", "type": "main", "index": 0 }]] },
    "Rune Translator (Structured Output Parser)": { "ai_outputParser": [[{ "node": "Oracle of Fit (Matchmaker AI)", "type": "ai_outputParser", "index": 0 }]] },
    "Provincial Gate": { "main": [[{ "node": "Mirrorbreak Pass (De-dupe by URL)", "type": "main", "index": 0 }, { "node": "Mock Tracker Rows", "type": "main", "index": 0 }]] },
    "AI Agent": { "main": [[{ "node": "Registry Desk (Prep Rows)", "type": "main", "index": 0 }]] },
    "OpenAI Chat Model1": {
      "ai_languageModel": [[
        { "node": "AI Agent", "type": "ai_languageModel", "index": 0 },
        { "node": "Structured Output Parser", "type": "ai_languageModel", "index": 0 }
      ]]
    },
    "Registry Desk (Prep Rows)": { "main": [[{ "node": "Write to Tracker (Append)", "type": "main", "index": 0 }]] },
    "Verdict Vortex (IF)": { "main": [[{ "node": "AI Agent", "type": "main", "index": 0 }]] },
    "Structured Output Parser": { "ai_outputParser": [[{ "node": "AI Agent", "type": "ai_outputParser", "index": 0 }]] }
  },
  "active": false,
  "settings": { "executionOrder": "v1" },
  "versionId": "120738bf-0f1c-4423-b79d-1792cc379e1b",
  "meta": { "instanceId": "da724ac245a4050ec266901a75717e9540eecfae15a81320d4813fbf9afc1ce4" },
  "id": "gqpbNhoExkdqKQyx",
  "tags": []
}
